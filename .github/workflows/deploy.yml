# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# permissions:
#   contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: cd /var/www
    - run: find . -type d -name ".git"

    - uses: actions/checkout@v3
    - name: Pull Main Branch
      run: |
        sudo git pull origin main
    
    - uses: actions/checkout@v3
    - run: mkdir ./src/main/resources
    - run: touch ./src/main/resources/application.yml
    - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    # - name: gradle bootjar
      # 처음에 ./gradlew 파일을 실행할 수 없어서, chmod 로 실행 가능하도록 바꿔줍니다
    - uses: actions/checkout@v3
    - run: cd /var/www
    - run: chmod +x ./gradlew
    - run: gradle wrapper
    - run: ./gradlew clean build
        
    # 9000 번 포트가 이미 있다면, 그 프로그램을 종료합니다
    - name: kill 9000 port if exist
      run: |
        if sudo lsof -i :9000; then
          echo "Port 9000 is already in use. Killing the process..."
          sudo lsof -i :9000 | awk 'NR!=1 {print $2}' | sudo xargs kill -9
        fi

    # 스프링 프로그램을 실행합니다
    - name: deploy
      run: |
        sudo java -jar build/libs/P-Line-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod &
